{"version":3,"sources":["chordsWiki.js","Wiki.js","chordsData.js","Keyboard.js"],"names":["chordsWiki","Wiki","params","CONST","CSS","EAST_AREA","WEST_AREA","DETAILS_ROW","LABEL","SUBTITLE_EAST","SUBTITLE_WEST","PLEASE_SELECT_CHORD","PLEASE_SELECT_CATEGORY","DETAILS_HEADING","SELECTOR","DATA_URL","config","rootElement","$","dataSource","chordsData","instrument","undefined","extend","self","this","container","chordSelect","categorySelect","eastContainer","westContainer","init","initializeSelect","render","append","loadData","attachEvents","initInstrument","Keyboard","select","placeholder","option","text","val","mainContent","renderEast","renderWest","addClass","subtitleEast","subtitleWest","data","populateSelect","chord_types","chord_categories","dataArray","selectObj","i","length","record","label","id","change","isSelectionValid","displayNotes","cleanNotes","KEYBOARD","WHITE_KEY","BLACK_KEY","PRESSED_KEY","NOTES","KEYS","ATTRIBUTE","KEY","instrumentChordsData","chord_instances","chord_id","type_id","notes","key","notesTextRow","createWhiteKey","addBlackKey","whiteKeyId","blackKeyId","whiteKey","attr","blackKey","keyboardContainer","notesLookup","chord","category","chordInstances","c","parseInt","getNotesLabelByIds","noteIds","labels","n","indexOf","push","getNotesKeysByIds","keys","colorKeys","k","cleanKeys","removeClass","notesLabels","empty","join"],"mappings":"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","file":"chordsWiki.min.js","sourcesContent":["/* jshint camelcase: false*/\r\nif (typeof(jQuery) === 'undefined') {\r\n\tthrow('Unable to find jQuery');\r\n}\r\n\r\nif (typeof(chordsWiki) === 'undefined') {\r\n\t/* jshint ignore:start */\r\n\tvar chordsWiki = {};\r\n\t/* jshint ignore:end */\r\n}","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords wiki widget\r\n\t * @param {jquery} options.rootElement\r\n\t * @param {Object} options.dataSource\r\n\t * @param {Object} options.instrument\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.Wiki = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tEAST_AREA: 'chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: 'chordsWiki_west_area',\r\n\t\t\t\tDETAILS_ROW: 'chordsWiki_details_row'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tSUBTITLE_EAST: 'Chord selection',\r\n\t\t\t\tSUBTITLE_WEST: 'Chord details',\r\n\t\t\t\tPLEASE_SELECT_CHORD: 'Please select a chord',\r\n\t\t\t\tPLEASE_SELECT_CATEGORY: 'Please select a category',\r\n\t\t\t\tDETAILS_HEADING: 'Notes: '\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tEAST_AREA: '.chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: '.chordsWiki_west_area',\r\n\t\t\t\tDETAILS_ROW: '.chordsWiki_details_row'\r\n\t\t\t},\r\n\t\t\tDATA_URL: 'src/data/chordsData.json'\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\trootElement: $('body'),\r\n\t\t\tdataSource: chordsWiki.chordsData,\r\n\t\t\tinstrument: undefined\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar chordSelect = null;\r\n\t\tvar categorySelect = null;\r\n\t\tvar eastContainer = null;\r\n\t\tvar westContainer = null;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tchordSelect = initializeSelect(chordSelect, CONST.LABEL.PLEASE_SELECT_CHORD);\r\n\t\t\tcategorySelect = initializeSelect(categorySelect, CONST.LABEL.PLEASE_SELECT_CATEGORY);\r\n\t\t\trender();\r\n\t\t\tconfig.rootElement.append(self.container);\r\n\t\t\tloadData();\r\n\t\t\tattachEvents();\r\n\t\t\tinitInstrument();\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initialize the instrument (either a custom one or the default one)\r\n\t\t */\r\n\t\tvar initInstrument = function() {\r\n\t\t\tif (typeof(config.instrument) === 'undefined'){\r\n\t\t\t\tconfig.instrument = new chordsWiki.Keyboard();\r\n\t\t\t}\r\n\t\t\twestContainer.append(config.instrument.container);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initialize select field\r\n\t\t * @param {Object} select - The selection field object.\r\n\t\t * @param {string} placeholder - The placeholder for the selection field.\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\tvar initializeSelect = function(select, placeholder) {\r\n\r\n\t\t\tselect = $('<select>');\r\n\t\t\tvar option = $('<option>');\r\n\t\t\toption.text(placeholder);\r\n\t\t\toption.val('');\r\n\t\t\tselect.append(option);\r\n\t\t\treturn select;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\t//Main content wrapper creation\r\n\t\t\tvar mainContent = $('<main>');\r\n\r\n\t\t\t//Append east and west areas to mainContent\r\n\t\t\tmainContent.append(renderEast());\r\n\t\t\tmainContent.append(renderWest());\r\n\r\n\t\t\t//Append mainContent to container\r\n\t\t\tself.container.append(mainContent);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the east area of the UI\r\n\t\t */\r\n\t\tvar renderEast = function() {\r\n\r\n\t\t\teastContainer = $('<div>');\r\n\t\t\teastContainer.addClass(CONST.CSS.EAST_AREA);\r\n\t\t\tvar subtitleEast = $('<h2>');\r\n\t\t\tsubtitleEast.text(CONST.LABEL.SUBTITLE_EAST);\r\n\t\t\teastContainer.append(subtitleEast);\r\n\t\t\teastContainer.append(chordSelect);\r\n\t\t\teastContainer.append(categorySelect);\r\n\t\t\treturn eastContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the west area of the UI\r\n\t\t */\r\n\t\tvar renderWest = function() {\r\n\r\n\t\t\twestContainer = $('<div>');\r\n\t\t\twestContainer.addClass(CONST.CSS.WEST_AREA);\r\n\t\t\tvar subtitleWest = $('<h2>');\r\n\t\t\tsubtitleWest.text(CONST.LABEL.SUBTITLE_WEST);\r\n\t\t\twestContainer.append(subtitleWest);\r\n\t\t\treturn westContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Load data via chordsData object (default option) or via an external json object\r\n\t\t */\r\n\t\tvar loadData = function() {\r\n\t\t\tvar data = config.dataSource;\r\n\t\t\tpopulateSelect(data.chord_types, chordSelect);\r\n\t\t\tpopulateSelect(data.chord_categories, categorySelect);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Populate select field given the data array and the select object\r\n\t\t * @param {Object} dataArray - the object containing data to be parsed.\r\n\t\t * @param {Object} selectObj - the selection field to be populated.\r\n\t\t */\r\n\t\tvar populateSelect = function(dataArray, selectObj) {\r\n\t\t\tfor (var i = 0; i < dataArray.length; i++) {\r\n\t\t\t\tvar record = dataArray[i];\r\n\t\t\t\tvar option = $('<option>');\r\n\t\t\t\toption.text(record.label);\r\n\t\t\t\toption.val(record.id);\r\n\t\t\t\tselectObj.append(option);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Attach events to UI elements\r\n\t\t */\r\n\t\tvar attachEvents = function() {\r\n\r\n\t\t\tchordSelect.change(function() {\r\n\t\t\t\tif (isSelectionValid()) {\r\n\t\t\t\t\tconfig.instrument.displayNotes(chordSelect.val(),categorySelect.val());\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tconfig.instrument.cleanNotes();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcategorySelect.change(function() {\r\n\t\t\t\tif (isSelectionValid()) {\r\n\t\t\t\t\tconfig.instrument.displayNotes(chordSelect.val(),categorySelect.val());\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tconfig.instrument.cleanNotes();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Check if the selected option is valid (is not the placeholder)\r\n\t\t */\r\n\t\tvar isSelectionValid = function() {\r\n\t\t\treturn (chordSelect.val() !== '' && categorySelect.val() !== '');\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());","/* jshint camelcase: false, quotmark: double */\r\n\r\nif (typeof(chordsWiki.chordsData) === \"undefined\") {\r\n\r\n\tchordsWiki.chordsData = {\r\n\t\t\"chord_types\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"C\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"D\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"chord_categories\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"major\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"minor\"\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n}","if (typeof(chordsWiki.Keyboard) === 'undefined') {\r\n\t/* jshint ignore:start */\r\n\tchordsWiki.Keyboard = {};\r\n\t/* jshint ignore:end */\r\n}\r\n\r\n(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the Keyboard instrument\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.Keyboard = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tKEYBOARD: 'chordsWiki_keyboard',\r\n\t\t\t\tWHITE_KEY: 'chordsWiki_key',\r\n\t\t\t\tBLACK_KEY: 'chordsWiki_black_key',\r\n\t\t\t\tPRESSED_KEY: 'chordsWiki_pressed_key'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tNOTES: 'Notes',\r\n\t\t\t\tKEYS: 'Keys'\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tWHITE_KEY: '.chordsWiki_key',\r\n\t\t\t\tBLACK_KEY: '.chordsWiki_black_key'\r\n\t\t\t},\r\n\t\t\tATTRIBUTE: {\r\n\t\t\t\tKEY: 'data-key'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\t/* jshint ignore:start */\r\n\t\tvar instrumentChordsData = {\r\n\t\t\t\"chord_instances\": [{\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [1, 7, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [1, 6, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [4, 11, 16]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [4, 10, 16]\r\n\t\t\t}\r\n\r\n\t\t\t],\r\n\t\t\t\"notes\": [{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"Cb\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"C\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"label\": \"C#\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"label\": \"Db\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 4,\r\n\t\t\t\t\"label\": \"D\",\r\n\t\t\t\t\"key\": 2\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 5,\r\n\t\t\t\t\"label\": \"D#\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 6,\r\n\t\t\t\t\"label\": \"Eb\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 7,\r\n\t\t\t\t\"label\": \"E\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 8,\r\n\t\t\t\t\"label\": \"E#\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"label\": \"Fb\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 10,\r\n\t\t\t\t\"label\": \"F\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 11,\r\n\t\t\t\t\"label\": \"F#\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 12,\r\n\t\t\t\t\"label\": \"Gb\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 13,\r\n\t\t\t\t\"label\": \"G\",\r\n\t\t\t\t\"key\": 7\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 14,\r\n\t\t\t\t\"label\": \"G#\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 15,\r\n\t\t\t\t\"label\": \"Ab\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 16,\r\n\t\t\t\t\"label\": \"A\",\r\n\t\t\t\t\"key\": 9\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 17,\r\n\t\t\t\t\"label\": \"A#\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 18,\r\n\t\t\t\t\"label\": \"Bb\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 19,\r\n\t\t\t\t\"label\": \"B\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 20,\r\n\t\t\t\t\"label\": \"B#\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}]\r\n\t\t};\r\n\t\t/* jshint ignore:end */\r\n\r\n\t\tvar notesTextRow = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tself.container.append(render());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Create the key object\r\n\t\t * @param {boolean} addBlackKey - Flag to define the type of keyboard key (with black key following or not).\r\n\t\t * @param {string} whiteKeyId - The key attribute unequivocally identifying the white key\r\n\t\t * @param {string} blackKeyId - The key attribute unequivocally identifying the black key\r\n\t\t * @returns {Object} whiteKey - The keyboard key html object generated\r\n\t\t */\r\n\t\tvar createWhiteKey = function(addBlackKey, whiteKeyId, blackKeyId) {\r\n\t\t\tvar whiteKey = $('<div>');\r\n\t\t\twhiteKey.addClass(CONST.CSS.WHITE_KEY);\r\n\t\t\twhiteKey.attr(CONST.ATTRIBUTE.KEY, whiteKeyId);\r\n\t\t\tif (addBlackKey === true) {\r\n\t\t\t\tvar blackKey = $('<div>');\r\n\t\t\t\tblackKey.addClass(CONST.CSS.BLACK_KEY);\r\n\t\t\t\tblackKey.attr(CONST.ATTRIBUTE.KEY, blackKeyId);\r\n\t\t\t\twhiteKey.append(blackKey);\r\n\t\t\t}\r\n\t\t\treturn whiteKey;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI of the keyboard\r\n\t\t */\r\n\t\tvar render = function() {\r\n\t\t\tvar keyboardContainer = $('<div>');\r\n\t\t\tkeyboardContainer.addClass(CONST.CSS.KEYBOARD);\r\n\r\n\t\t\tkeyboardContainer.append(createWhiteKey(true,0,1));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(true,2,3));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(false,4));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(true,5,6));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(true,7,8));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(true,9,10));\r\n\t\t\tkeyboardContainer.append(createWhiteKey(false,11));\r\n\t\t\t\r\n\t\t\treturn keyboardContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Retrieve the set of notes given the chord and the category\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t * @returns {boolean|string[]}\r\n\t\t */\r\n\t\tvar notesLookup = function(chord, category) {\r\n\t\t\tvar chordInstances = instrumentChordsData.chord_instances;\r\n\t\t\tfor (var c in chordInstances) {\r\n\t\t\t\tif (chordInstances[c].chord_id === parseInt(chord) && chordInstances[c].type_id === parseInt(category)) {\r\n\t\t\t\t\treturn chordInstances[c].notes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get notes labels by ids\r\n\t\t * @param {string[]} noteIds - The array containing the list of notes ids\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar getNotesLabelByIds = function(noteIds) {\r\n\t\t\tvar notes = instrumentChordsData.notes;\r\n\t\t\tvar labels = [];\r\n\t\t\tfor (var n in notes) {\r\n\t\t\t\tif (noteIds.indexOf(notes[n].id) > -1) {\r\n\t\t\t\t\tlabels.push(notes[n].label);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn labels;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get keys ids given the notes array\r\n\t\t * @param {string[]} noteIds - The array containing the list of notes ids\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar getNotesKeysByIds = function(noteIds) {\r\n\t\t\tvar notes = instrumentChordsData.notes;\r\n\t\t\tvar keys = [];\r\n\t\t\tfor (var n in notes) {\r\n\t\t\t\tif (noteIds.indexOf(notes[n].id) > -1) {\r\n\t\t\t\t\tkeys.push(notes[n].key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn keys;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display notes on keyboard\r\n\t\t * @param {string[]} keys - The array containing the list of keys ids\r\n\t\t */\r\n\t\tvar colorKeys = function(keys){\r\n\t\t\tfor(var k in keys){\r\n\t\t\t\t$( '['+CONST.ATTRIBUTE.KEY+'= \"'+keys[k]+'\"]').addClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean notes on keyboard\r\n\t\t */\r\n\t\tvar cleanKeys = function(){\r\n\t\t\t$(CONST.SELECTOR.BLACK_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\t$(CONST.SELECTOR.WHITE_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Display notes details\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t */\r\n\t\tthis.displayNotes = function(chord, category) {\r\n\t\t\tvar notes = notesLookup(chord, category);\r\n\t\t\tvar notesLabels = getNotesLabelByIds(notes);\r\n\t\t\tvar keys = getNotesKeysByIds(notes);\r\n\t\t\tif (notesTextRow === null) {\r\n\t\t\t\tnotesTextRow = $('<span>');\r\n\t\t\t\tself.container.append(notesTextRow);\r\n\t\t\t}\r\n\t\t\tnotesTextRow.empty().text(CONST.LABEL.NOTES + ' ' + notesLabels.join() + ' ' + CONST.LABEL.KEYS + ' ' + keys.join());\r\n\t\t\tcleanKeys();\r\n\t\t\tcolorKeys(keys);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean notes details\r\n\t\t */\r\n\t\tthis.cleanNotes = function() {\r\n\t\t\tif (notesTextRow !== null) {\r\n\t\t\t\tnotesTextRow.empty();\r\n\t\t\t}\r\n\t\t\tcleanKeys();\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());"],"sourceRoot":"."}