{"version":3,"sources":["chordsWiki.js","WikiManager.js","Wiki.js","chordsData.js","Keyboard.js"],"names":["chordsWiki","WikiManager","params","CONST","CSS","EAST_AREA","WEST_AREA","LABEL","SUBTITLE_EAST","SUBTITLE_WEST","SELECTOR","config","rootElement","$","dataSource","chordsData","instrument","undefined","extend","this","container","eastContainer","westContainer","wiki","self","init","render","Wiki","appendExternalContent","append","mainContent","renderEast","renderWest","addClass","subtitleEast","text","subtitleWest","DETAILS_ROW","PLEASE_SELECT_CHORD","PLEASE_SELECT_CATEGORY","DETAILS_HEADING","DATA_URL","chordSelect","categorySelect","initializeSelect","loadData","attachEvents","select","placeholder","option","val","data","populateSelect","html","selectObj","templateScript","template","Handlebars","compile","change","isSelectionValid","displayChordDetails","err","console","log","cleanChordDetails","chord_types","id","label","chord_categories","Keyboard","KEYBOARD","WHITE_KEY","BLACK_KEY","PRESSED_KEY","KEYBOARD_CONTAINER","NOTES","KEYS","ATTRIBUTE","KEY","ERROR","CHORD_NOT_FOUND","instrumentChordsData","chord_instances","chord_id","type_id","notes","key","notesTextRow","createWhiteKey","addBlackKey","whiteKeyId","blackKeyId","whiteKey","attr","blackKey","keyboardContainer","keyboardInstrument","notesLookup","chord","category","chordInstances","c","parseInt","getNotesProperty","noteIds","prop","properties","n","indexOf","push","displayTextualDetails","notesLabels","join","cleanTextualDetails","empty","colorKeys","keys","k","find","cleanKeys","removeClass","length"],"mappings":"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","file":"chordsWiki.min.js","sourcesContent":["/* istanbul ignore if */\r\nif (typeof(jQuery) === 'undefined') {\r\n\tthrow('Unable to find jQuery');\r\n}\r\n/* istanbul ignore else */\r\nif (typeof(chordsWiki) === 'undefined') {\r\n\t/* jshint ignore:start */\r\n\tvar chordsWiki = {};\r\n\t/* jshint ignore:end */\r\n}","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords wiki widget\r\n\t * @param {jquery} params.rootElement\r\n\t * @param {Object} params.dataSource\r\n\t * @param {Object} params.instrument\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.WikiManager = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tEAST_AREA: 'chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: 'chordsWiki_west_area',\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tSUBTITLE_EAST: 'Chord selection',\r\n\t\t\t\tSUBTITLE_WEST: 'Chord details',\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tEAST_AREA: '.chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: '.chordsWiki_west_area',\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\trootElement: $('body'),\r\n\t\t\tdataSource: chordsWiki.chordsData,\r\n\t\t\tinstrument: undefined\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar eastContainer = null;\r\n\t\tvar westContainer = null;\r\n\r\n\t\tvar wiki = null;\r\n\t\tvar instrument = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\trender();\r\n\r\n\t\t\twiki = new chordsWiki.Wiki({\r\n\t\t\t\tdataSource: chordsWiki.chordsData,\r\n\t\t\t});\r\n\r\n\t\t\tinstrument = params.instrument;\r\n\r\n\t\t\tappendExternalContent();\r\n\t\t\tconfig.rootElement.append(self.container);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\t//Main content wrapper creation\r\n\t\t\tvar mainContent = $('<main>');\r\n\r\n\t\t\t//Append east and west areas to mainContent\r\n\t\t\tmainContent.append(renderEast());\r\n\t\t\tmainContent.append(renderWest());\r\n\r\n\t\t\t//Append mainContent to container\r\n\t\t\tself.container.append(mainContent);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the east area of the UI\r\n\t\t */\r\n\t\tvar renderEast = function() {\r\n\r\n\t\t\teastContainer = $('<div>');\r\n\t\t\teastContainer.addClass(CONST.CSS.EAST_AREA);\r\n\t\t\tvar subtitleEast = $('<h2>');\r\n\t\t\tsubtitleEast.text(CONST.LABEL.SUBTITLE_EAST);\r\n\t\t\teastContainer.append(subtitleEast);\r\n\t\t\treturn eastContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the west area of the UI\r\n\t\t */\r\n\t\tvar renderWest = function() {\r\n\r\n\t\t\twestContainer = $('<div>');\r\n\t\t\twestContainer.addClass(CONST.CSS.WEST_AREA);\r\n\t\t\tvar subtitleWest = $('<h2>');\r\n\t\t\tsubtitleWest.text(CONST.LABEL.SUBTITLE_WEST);\r\n\t\t\twestContainer.append(subtitleWest);\r\n\t\t\treturn westContainer;\r\n\r\n\t\t};\r\n\r\n\t\tvar appendExternalContent = function() {\r\n\t\t\teastContainer.append(wiki.container);\r\n\t\t\twestContainer.append(instrument.container);\r\n\t\t};\r\n\t\t\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());\r\n","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords wiki widget\r\n\t * @param {Object} params.dataSource\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.Wiki = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tDETAILS_ROW: 'chordsWiki_details_row'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tPLEASE_SELECT_CHORD: 'Please select a chord',\r\n\t\t\t\tPLEASE_SELECT_CATEGORY: 'Please select a category',\r\n\t\t\t\tDETAILS_HEADING: 'Notes: '\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tDETAILS_ROW: '.chordsWiki_details_row'\r\n\t\t\t},\r\n\t\t\tDATA_URL: 'src/data/chordsData.json'\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\tdataSource: chordsWiki.chordsData,\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar chordSelect = null;\r\n\t\tvar categorySelect = null;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tchordSelect = initializeSelect(chordSelect, CONST.LABEL.PLEASE_SELECT_CHORD);\r\n\t\t\tcategorySelect = initializeSelect(categorySelect, CONST.LABEL.PLEASE_SELECT_CATEGORY);\r\n\t\t\trender();\r\n\t\t\tloadData();\r\n\t\t\tattachEvents();\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initialize select field\r\n\t\t * @param {Object} select - The selection field object.\r\n\t\t * @param {string} placeholder - The placeholder for the selection field.\r\n\t\t * @returns {Object}\r\n\t\t */\r\n\t\tvar initializeSelect = function(select, placeholder) {\r\n\r\n\t\t\tselect = $('<select>');\r\n\t\t\tvar option = $('<option>');\r\n\t\t\toption.text(placeholder);\r\n\t\t\toption.val('');\r\n\t\t\tselect.append(option);\r\n\t\t\treturn select;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\t//Append the selection fields to the container\r\n\t\t\tself.container.append(chordSelect);\r\n\t\t\tself.container.append(categorySelect);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Load data via chordsData object (default option) or via an external json object\r\n\t\t */\r\n\t\tvar loadData = function() {\r\n\t\t\tvar data = config.dataSource;\r\n\t\t\tpopulateSelect(data, chordSelect, $('#chordsTypes').html());\r\n\t\t\tpopulateSelect(data, categorySelect, $('#chordsCategories').html());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Populate select field given the data array and the select object\r\n\t\t * @param {Object} data - the object containing data to be parsed.\r\n\t\t * @param {Object} selectObj - the selection field to be populated.\r\n\t\t * @param {Object} templateScript - the Handlebars template script.\r\n\t\t */\r\n\t\tvar populateSelect = function(data, selectObj, templateScript) {\r\n\t\t\tvar template = Handlebars.compile (templateScript);\r\n\t\t\tselectObj.append(template(data));\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Attach events to UI elements\r\n\t\t */\r\n\t\tvar attachEvents = function() {\r\n\r\n\t\t\tchordSelect.change(function() {\r\n\t\t\t\tif (isSelectionValid()) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconfig.instrument.displayChordDetails(chordSelect.val(),categorySelect.val());\r\n\t\t\t\t\t}catch(err){\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tconfig.instrument.cleanChordDetails();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcategorySelect.change(function() {\r\n\t\t\t\tif (isSelectionValid()) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconfig.instrument.displayChordDetails(chordSelect.val(),categorySelect.val());\r\n\t\t\t\t\t}catch(err){\r\n\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tconfig.instrument.cleanChordDetails();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Check if the selected option is valid (is not the placeholder)\r\n\t\t */\r\n\t\tvar isSelectionValid = function() {\r\n\t\t\treturn (chordSelect.val() !== '' && categorySelect.val() !== '');\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());","/* jshint camelcase: false, quotmark: double */\r\n\r\nif (typeof(chordsWiki.chordsData) === \"undefined\") {\r\n\r\n\tchordsWiki.chordsData = {\r\n\t\t\"chord_types\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"C\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"D\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"chord_categories\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"major\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"minor\"\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n}","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the Keyboard instrument\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.Keyboard = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tKEYBOARD: 'chordsWiki_keyboard',\r\n\t\t\t\tWHITE_KEY: 'chordsWiki_white_key',\r\n\t\t\t\tBLACK_KEY: 'chordsWiki_black_key',\r\n\t\t\t\tPRESSED_KEY: 'chordsWiki_pressed_key',\r\n\t\t\t\tKEYBOARD_CONTAINER: 'chordsWiki_keyboard_container'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tNOTES: 'Notes',\r\n\t\t\t\tKEYS: 'Keys'\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tWHITE_KEY: '.chordsWiki_white_key',\r\n\t\t\t\tBLACK_KEY: '.chordsWiki_black_key'\r\n\t\t\t},\r\n\t\t\tATTRIBUTE: {\r\n\t\t\t\tKEY: 'data-key'\r\n\t\t\t},\r\n\t\t\tERROR: {\r\n\t\t\t\tCHORD_NOT_FOUND: 'Chord not found'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\t/* jshint ignore:start */\r\n\t\tvar instrumentChordsData = {\r\n\t\t\t\"chord_instances\": [{\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [1, 7, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [1, 6, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [4, 11, 16]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [4, 10, 16]\r\n\t\t\t}\r\n\r\n\t\t\t],\r\n\t\t\t\"notes\": [{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"Cb\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"C\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"label\": \"C#\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"label\": \"Db\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 4,\r\n\t\t\t\t\"label\": \"D\",\r\n\t\t\t\t\"key\": 2\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 5,\r\n\t\t\t\t\"label\": \"D#\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 6,\r\n\t\t\t\t\"label\": \"Eb\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 7,\r\n\t\t\t\t\"label\": \"E\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 8,\r\n\t\t\t\t\"label\": \"E#\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"label\": \"Fb\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 10,\r\n\t\t\t\t\"label\": \"F\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 11,\r\n\t\t\t\t\"label\": \"F#\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 12,\r\n\t\t\t\t\"label\": \"Gb\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 13,\r\n\t\t\t\t\"label\": \"G\",\r\n\t\t\t\t\"key\": 7\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 14,\r\n\t\t\t\t\"label\": \"G#\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 15,\r\n\t\t\t\t\"label\": \"Ab\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 16,\r\n\t\t\t\t\"label\": \"A\",\r\n\t\t\t\t\"key\": 9\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 17,\r\n\t\t\t\t\"label\": \"A#\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 18,\r\n\t\t\t\t\"label\": \"Bb\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 19,\r\n\t\t\t\t\"label\": \"B\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 20,\r\n\t\t\t\t\"label\": \"B#\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}]\r\n\t\t};\r\n\t\t/* jshint ignore:end */\r\n\r\n\t\tvar notesTextRow = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tself.container.append(render());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Create the key object\r\n\t\t * @param {boolean} addBlackKey - Flag to define the type of keyboard key (with black key following or not).\r\n\t\t * @param {string} whiteKeyId - The key attribute unequivocally identifying the white key\r\n\t\t * @param {string} blackKeyId - The key attribute unequivocally identifying the black key\r\n\t\t * @returns {jQuery} whiteKey - The keyboard key jQuery object generated\r\n\t\t */\r\n\t\tvar createWhiteKey = function(addBlackKey, whiteKeyId, blackKeyId) {\r\n\t\t\tvar whiteKey = $('<div>');\r\n\t\t\twhiteKey.addClass(CONST.CSS.WHITE_KEY);\r\n\t\t\twhiteKey.attr(CONST.ATTRIBUTE.KEY, whiteKeyId);\r\n\t\t\tif (addBlackKey === true) {\r\n\t\t\t\tvar blackKey = $('<div>');\r\n\t\t\t\tblackKey.addClass(CONST.CSS.BLACK_KEY);\r\n\t\t\t\tblackKey.attr(CONST.ATTRIBUTE.KEY, blackKeyId);\r\n\t\t\t\twhiteKey.append(blackKey);\r\n\t\t\t}\r\n\t\t\treturn whiteKey;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI of the keyboard\r\n\t\t */\r\n\t\tvar render = function() {\r\n\t\t\tvar keyboardContainer = $('<div>');\r\n\t\t\tkeyboardContainer.addClass(CONST.CSS.KEYBOARD_CONTAINER);\r\n\t\t\tvar keyboardInstrument = $('<div>');\r\n\t\t\tkeyboardInstrument.addClass(CONST.CSS.KEYBOARD);\r\n\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,0,1));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,2,3));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(false,4));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,5,6));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,7,8));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,9,10));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(false,11));\r\n\r\n\t\t\tkeyboardContainer.append(keyboardInstrument);\r\n\t\t\treturn keyboardContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Retrieve the set of notes given the chord and the category\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar notesLookup = function(chord, category) {\r\n\t\t\tvar chordInstances = instrumentChordsData.chord_instances;\r\n\t\t\tfor (var c in chordInstances) {\r\n\t\t\t\tif (chordInstances[c].chord_id === parseInt(chord) && chordInstances[c].type_id === parseInt(category)) {\r\n\t\t\t\t\treturn chordInstances[c].notes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get notes property given the array of notes ids and the name of the property\r\n\t\t * @param {string[]} noteIds - The array containing the list of notes ids\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar getNotesProperty = function(noteIds, prop) {\r\n\t\t\tvar notes = instrumentChordsData.notes;\r\n\t\t\tvar properties = [];\r\n\t\t\tfor (var n in notes) {\r\n\t\t\t\tif (noteIds.indexOf(notes[n].id) > -1) {\r\n\t\t\t\t\tproperties.push(notes[n][prop]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn properties;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display textual details about the selected chord\r\n\t\t * @param {string[]} notes - The array containing the list of notes ids\r\n\t\t */\r\n\t\tvar displayTextualDetails = function(notes){\r\n\t\t\tvar notesLabels = getNotesProperty(notes, 'label');\r\n\t\t\tif (notesTextRow === null) {\r\n\t\t\t\tnotesTextRow = $('<span>');\r\n\t\t\t\tself.container.append(notesTextRow);\r\n\t\t\t}\r\n\t\t\tnotesTextRow.text(CONST.LABEL.NOTES + ' ' + notesLabels.join() + ' ' + CONST.LABEL.KEYS + ' ' + notesLabels.join());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord textual details\r\n\t\t */\r\n\t\tvar cleanTextualDetails = function(){\r\n\t\t\tif (notesTextRow !== null) {\r\n\t\t\t\tnotesTextRow.empty();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display notes on keyboard\r\n\t\t * @param {string[]} notes - The array containing the list of notes ids\r\n\t\t */\r\n\t\tvar colorKeys = function(notes){\r\n\t\t\tvar keys = getNotesProperty(notes, 'key');\r\n\t\t\tfor(var k in keys){\r\n\t\t\t\tself.container.find( '['+CONST.ATTRIBUTE.KEY+'= \"'+keys[k]+'\"]').addClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean notes on keyboard\r\n\t\t */\r\n\t\tvar cleanKeys = function(){\r\n\t\t\tself.container.find(CONST.SELECTOR.BLACK_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\tself.container.find(CONST.SELECTOR.WHITE_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Display chord details\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t */\r\n\t\tthis.displayChordDetails = function(chord, category) {\r\n\t\t\t//clean notes details\r\n\t\t\tself.cleanChordDetails();\r\n\r\n\t\t\t//retrieve chord details\r\n\t\t\tvar notes = notesLookup(chord, category);\r\n\t\t\tif(notes.length===0){\r\n\t\t\t\tthrow CONST.ERROR.CHORD_NOT_FOUND;\r\n\t\t\t}\r\n\r\n\t\t\t//display chord textual details (notes, keys)\r\n\t\t\tdisplayTextualDetails(notes);\r\n\r\n\t\t\t//display notes on keyboard, coloring keys\r\n\t\t\tcolorKeys(notes);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord details\r\n\t\t */\r\n\t\tthis.cleanChordDetails = function() {\r\n\t\t\tcleanTextualDetails();\r\n\t\t\tcleanKeys();\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());"],"sourceRoot":"."}