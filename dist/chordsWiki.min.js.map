{"version":3,"sources":["chordsWiki.js","WikiManager.js","ChordsEditor.js","Wiki.js","chordsData.js","NotesPicker.js","Instrument.js","Keyboard.js"],"names":["chordsWiki","superClass","context","parent","args","apply","WikiManager","params","CONST","CSS","EAST_AREA","WEST_AREA","LABEL","SUBTITLE_EAST","SUBTITLE_WEST","SELECTOR","config","rootElement","$","dataSource","chordsData","instrument","Instrument","extend","this","container","eastContainer","westContainer","wiki","self","init","render","initWiki","appendSubElements","append","Wiki","addObserver","mainContent","renderEast","renderWest","addClass","subtitleEast","text","subtitleWest","onSelectionChangedHandler","data","displayChordDetails","chord","category","onSelectionResetHandler","cleanChordDetails","ChordsEditor","notesPicker","initNotesPicker","NotesPicker","luga","Notifier","PLEASE_SELECT_CHORD","PLEASE_SELECT_CATEGORY","EVENT","SELECTION_CHANGED","SELECTION_RESET","TEMPLATE_SELECTOR","CHORD_TYPES","CHORD_CATEGORIES","chordSelect","categorySelect","initializeSelect","loadData","attachEvents","select","placeholder","option","val","populateSelect","html","selectObj","templateScript","template","Handlebars","compile","handleOnSelectionChange","isSelectionValid","notifyObservers","err","console","log","change","chord_types","id","label","chord_categories","notes","DOM","INPUT_TYPE","INPUT_NAME","notesList","initializeNotesCheckboxList","populateNotesCheckboxList","dataArray","list","i","length","record","listEntry","checkboxElement","type","name","value","NOTES","ERROR","CHORD_NOT_FOUND","instrumentChordsData","chord_instances","chord_id","type_id","key","notesTextRow","instrumentContainer","notesLookup","chordInstances","parseInt","getNotesProperty","noteIds","prop","properties","n","indexOf","push","displayTextualDetails","notesLabels","join","cleanTextualDetails","empty","Keyboard","arguments","KEYBOARD","WHITE_KEY","BLACK_KEY","PRESSED_KEY","KEYBOARD_CONTAINER","KEYS","ATTRIBUTE","KEY","createWhiteKey","addBlackKey","whiteKeyId","blackKeyId","whiteKey","attr","blackKey","keyboardContainer","keyboardInstrument","c","colorKeys","keys","k","find","cleanKeys","removeClass"],"mappings":"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","file":"chordsWiki.min.js","sourcesContent":["/* istanbul ignore if */\r\nif (typeof(jQuery) === 'undefined') {\r\n\tthrow('Unable to find jQuery');\r\n}\r\n/* istanbul ignore else */\r\nif (typeof(chordsWiki) === 'undefined') {\r\n\t/* jshint ignore:start */\r\n\tvar chordsWiki = {};\r\n\t/* jshint ignore:end */\r\n}\r\n\r\n(function() {\r\n\t'use strict';\r\n\r\n\t/**\r\n\t * Make a class inherit from another. The child will inherit all the methods of the parent.\r\n\t * @param {*} context The object that will be used as \"this\"\r\n\t * @param {function} parent The parent's constructor\r\n\t * @param {...*} args The optional arguments for the parent constructor\r\n\t */\r\n\tchordsWiki.superClass = function(context, parent, args) {\r\n\t\tparent.apply(context, args || []);\r\n\t};\r\n\r\n\r\n})();","/**\r\n * Data broadcast by the Wiki, after both selection fields change and valid values are selected\r\n *\r\n * @typedef {Object} chordsWiki.WikiManager.Chord\r\n * @property {number} chord - The id of the selected chord\r\n * @property {number} category - The id of the selected category\r\n */\r\n\r\n(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords wiki widget\r\n\t * @param {jQuery} params.rootElement - the jQuery container for the chords wiki widget\r\n\t * @param {Object} params.dataSource - data with the list of chords types and categories\r\n\t * @param {Object} params.instrument - the instrument widget that needs to communicate with the Wiki object\r\n\t * @constructor\r\n\t * @listens selectionChanged\r\n\t * @listens selectionReset\r\n\t */\r\n\tchordsWiki.WikiManager = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tEAST_AREA: 'chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: 'chordsWiki_west_area'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tSUBTITLE_EAST: 'Chord selection',\r\n\t\t\t\tSUBTITLE_WEST: 'Chord details'\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tEAST_AREA: '.chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: '.chordsWiki_west_area'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\trootElement: $('body'),\r\n\t\t\tdataSource: chordsWiki.chordsData,\r\n\t\t\tinstrument: new chordsWiki.Instrument()\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar eastContainer = null;\r\n\t\tvar westContainer = null;\r\n\r\n\t\t/**\r\n\t\t * @type {chordsWiki.Wiki}\r\n\t\t */\r\n\t\tvar wiki = null;\r\n\t\tvar instrument = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\trender();\r\n\t\t\tinitWiki();\r\n\t\t\tinstrument = config.instrument;\r\n\t\t\tappendSubElements();\r\n\t\t\tconfig.rootElement.append(self.container);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Instantiate and initialize the Wiki object. Listen to its events.\r\n\t\t */\r\n\t\tvar initWiki = function() {\r\n\t\t\twiki = new chordsWiki.Wiki({\r\n\t\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t\t});\r\n\t\t\twiki.addObserver(self);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\tvar mainContent = $('<main>');\r\n\r\n\t\t\tmainContent.append(renderEast());\r\n\t\t\tmainContent.append(renderWest());\r\n\r\n\t\t\tself.container.append(mainContent);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the east area of the UI\r\n\t\t * @returns {jQuery} eastContainer - the jQuery wrapper of the html element containing the east area of the widget\r\n\t\t */\r\n\t\tvar renderEast = function() {\r\n\r\n\t\t\teastContainer = $('<div>');\r\n\t\t\teastContainer.addClass(CONST.CSS.EAST_AREA);\r\n\t\t\tvar subtitleEast = $('<h2>');\r\n\t\t\tsubtitleEast.text(CONST.LABEL.SUBTITLE_EAST);\r\n\t\t\teastContainer.append(subtitleEast);\r\n\t\t\treturn eastContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the west area of the UI\r\n\t\t * @returns {jQuery} westContainer - the jQuery wrapper of the html element containing the west area of the widget\r\n\t\t */\r\n\t\tvar renderWest = function() {\r\n\r\n\t\t\twestContainer = $('<div>');\r\n\t\t\twestContainer.addClass(CONST.CSS.WEST_AREA);\r\n\t\t\tvar subtitleWest = $('<h2>');\r\n\t\t\tsubtitleWest.text(CONST.LABEL.SUBTITLE_WEST);\r\n\t\t\twestContainer.append(subtitleWest);\r\n\t\t\treturn westContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Append to the east and west container respectively the wiki element and the instrument element\r\n\t\t */\r\n\t\tvar appendSubElements = function() {\r\n\r\n\t\t\t//append the wiki\r\n\t\t\teastContainer.append(wiki.container);\r\n\r\n\t\t\t//append the instrument\r\n\t\t\twestContainer.append(instrument.container);\r\n\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t\t/* NOTIFICATION HANDLERS */\r\n\r\n\t\t/**\r\n\t\t * Listen to the \"selectionChanged\" event notifications broadcast by the Wiki\r\n\t\t * @param {chordsWiki.WikiManager.Chord} data\r\n\t\t */\r\n\t\tthis.onSelectionChangedHandler = function(data){\r\n\t\t\tinstrument.displayChordDetails(data.chord, data.category);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Listen to the \"selectionReset\" event notifications broadcast by the Wiki\r\n\t\t */\r\n\t\tthis.onSelectionResetHandler = function(data){\r\n\t\t\tinstrument.cleanChordDetails();\r\n\t\t};\r\n\r\n\t};\r\n\r\n}());\r\n","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords editor\r\n\t * @param {Object} params.dataSource - data with the list of chords types and categories\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.ChordsEditor = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tEAST_AREA: 'chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: 'chordsWiki_west_area'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tSUBTITLE_EAST: 'Chord selection',\r\n\t\t\t\tSUBTITLE_WEST: 'Notes Selection'\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tEAST_AREA: '.chordsWiki_east_area',\r\n\t\t\t\tWEST_AREA: '.chordsWiki_west_area'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\trootElement: $('body'),\r\n\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.container = $('<div>');\r\n\t\tvar eastContainer = null;\r\n\t\tvar westContainer = null;\r\n\r\n\t\tvar wiki = null;\r\n\t\tvar notesPicker = null;\r\n\r\n\r\n\t\tvar init = function() {\r\n\t\t\trender();\r\n\t\t\tinitWiki();\r\n\t\t\tinitNotesPicker();\r\n\t\t\tappendSubElements();\r\n\t\t\tconfig.rootElement.append(self.container);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Instantiate and initialize the Wiki object.\r\n\t\t */\r\n\t\tvar initWiki = function() {\r\n\t\t\twiki = new chordsWiki.Wiki({\r\n\t\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Instantiate and initialize the Wiki object.\r\n\t\t */\r\n\t\tvar initNotesPicker = function() {\r\n\t\t\tnotesPicker = new chordsWiki.NotesPicker({\r\n\t\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\tvar mainContent = $('<main>');\r\n\r\n\t\t\tmainContent.append(renderEast());\r\n\t\t\tmainContent.append(renderWest());\r\n\r\n\t\t\tself.container.append(mainContent);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the east area of the UI\r\n\t\t * @returns {jQuery} eastContainer - the jQuery wrapper of the html element containing the east area of the widget\r\n\t\t */\r\n\t\tvar renderEast = function() {\r\n\r\n\t\t\teastContainer = $('<div>');\r\n\t\t\teastContainer.addClass(CONST.CSS.EAST_AREA);\r\n\t\t\tvar subtitleEast = $('<h2>');\r\n\t\t\tsubtitleEast.text(CONST.LABEL.SUBTITLE_EAST);\r\n\t\t\teastContainer.append(subtitleEast);\r\n\t\t\treturn eastContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the west area of the UI\r\n\t\t * @returns {jQuery} westContainer - the jQuery wrapper of the html element containing the west area of the widget\r\n\t\t */\r\n\t\tvar renderWest = function() {\r\n\r\n\t\t\twestContainer = $('<div>');\r\n\t\t\twestContainer.addClass(CONST.CSS.WEST_AREA);\r\n\t\t\tvar subtitleWest = $('<h2>');\r\n\t\t\tsubtitleWest.text(CONST.LABEL.SUBTITLE_WEST);\r\n\t\t\twestContainer.append(subtitleWest);\r\n\t\t\treturn westContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Append to the east and west container the subelements composing the editor\r\n\t\t */\r\n\t\tvar appendSubElements = function() {\r\n\t\t\t//append the wiki\r\n\t\t\teastContainer.append(wiki.container);\r\n\r\n\t\t\t//append the notes picker\r\n\t\t\twestContainer.append(notesPicker.container);\r\n\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());\r\n","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the chords wiki\r\n\t * @param {Object} params.dataSource - data with the list of chords types and categories\r\n\t * @constructor\r\n\t * @extend luga.Notifier\r\n\t * @fires selectionChanged\r\n\t * @fires selectionReset\r\n\t */\r\n\tchordsWiki.Wiki = function(params) {\r\n\r\n\t\tluga.extend(luga.Notifier, this);\r\n\r\n\t\tvar CONST = {\r\n\t\t\tLABEL: {\r\n\t\t\t\tPLEASE_SELECT_CHORD: 'Please select a chord',\r\n\t\t\t\tPLEASE_SELECT_CATEGORY: 'Please select a category'\r\n\t\t\t},\r\n\t\t\tEVENT: {\r\n\t\t\t\tSELECTION_CHANGED : 'selectionChanged',\r\n\t\t\t\tSELECTION_RESET : 'selectionReset'\r\n\t\t\t},\r\n\t\t\tTEMPLATE_SELECTOR: {\r\n\t\t\t\tCHORD_TYPES: '#chordsTypes',\r\n\t\t\t\tCHORD_CATEGORIES: '#chordsCategories'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar chordSelect = null;\r\n\t\tvar categorySelect = null;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tchordSelect = initializeSelect(chordSelect, CONST.LABEL.PLEASE_SELECT_CHORD);\r\n\t\t\tcategorySelect = initializeSelect(categorySelect, CONST.LABEL.PLEASE_SELECT_CATEGORY);\r\n\t\t\trender();\r\n\t\t\tloadData();\r\n\t\t\tattachEvents();\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Initialize select field\r\n\t\t * @param {Object} select - The selection field object.\r\n\t\t * @param {string} placeholder - The placeholder for the selection field.\r\n\t\t * @returns {jQuery} select - The initialized selection field jQuery object\r\n\t\t */\r\n\t\tvar initializeSelect = function(select, placeholder) {\r\n\r\n\t\t\tselect = $('<select>');\r\n\t\t\tvar option = $('<option>');\r\n\t\t\toption.text(placeholder);\r\n\t\t\toption.val('');\r\n\t\t\tselect.append(option);\r\n\t\t\treturn select;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\r\n\t\t\t//Append the selection fields to the container\r\n\t\t\tself.container.append(chordSelect);\r\n\t\t\tself.container.append(categorySelect);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Load data via chordsData object (default option) or via an external json object\r\n\t\t */\r\n\t\tvar loadData = function() {\r\n\t\t\tvar data = config.dataSource;\r\n\t\t\tpopulateSelect(data, chordSelect, $(CONST.TEMPLATE_SELECTOR.CHORD_TYPES).html());\r\n\t\t\tpopulateSelect(data, categorySelect, $(CONST.TEMPLATE_SELECTOR.CHORD_CATEGORIES).html());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Populate select field given the data array and the select object\r\n\t\t * @param {Object} data - the object containing data to be parsed.\r\n\t\t * @param {jQuery} selectObj - the selection field to be populated.\r\n\t\t * @param {Object} templateScript - the Handlebars template script.\r\n\t\t */\r\n\t\tvar populateSelect = function(data, selectObj, templateScript) {\r\n\t\t\tvar template = Handlebars.compile (templateScript);\r\n\t\t\tselectObj.append(template(data));\r\n\t\t};\r\n\r\n\t\tvar handleOnSelectionChange = function() {\r\n\t\t\tif (isSelectionValid()) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tself.notifyObservers(CONST.EVENT.SELECTION_CHANGED, { chord: chordSelect.val(), category: categorySelect.val()});\r\n\t\t\t\t}catch(err){\r\n\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tself.notifyObservers(CONST.EVENT.SELECTION_RESET, {});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Attach events to UI elements\r\n\t\t */\r\n\t\tvar attachEvents = function() {\r\n\t\t\tchordSelect.change(handleOnSelectionChange);\r\n\t\t\tcategorySelect.change(handleOnSelectionChange);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Check if the selected option is valid (is not the placeholder)\r\n\t\t */\r\n\t\tvar isSelectionValid = function() {\r\n\t\t\treturn (chordSelect.val() !== '' && categorySelect.val() !== '');\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());","/* jshint camelcase: false, quotmark: double */\r\n\r\nif (typeof(chordsWiki.chordsData) === \"undefined\") {\r\n\r\n\tchordsWiki.chordsData = {\r\n\t\t\"chord_types\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"C\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"D\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"chord_categories\": [\r\n\t\t\t{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"major\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"minor\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"notes\": [\r\n\t\t{\r\n\t\t\t\"id\": 0,\r\n\t\t\t\"label\": \"Cb\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 1,\r\n\t\t\t\"label\": \"C\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 2,\r\n\t\t\t\"label\": \"C#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 3,\r\n\t\t\t\"label\": \"Db\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 4,\r\n\t\t\t\"label\": \"D\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 5,\r\n\t\t\t\"label\": \"D#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 6,\r\n\t\t\t\"label\": \"Eb\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 7,\r\n\t\t\t\"label\": \"E\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 8,\r\n\t\t\t\"label\": \"E#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 9,\r\n\t\t\t\"label\": \"Fb\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 10,\r\n\t\t\t\"label\": \"F\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 11,\r\n\t\t\t\"label\": \"F#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 12,\r\n\t\t\t\"label\": \"Gb\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 13,\r\n\t\t\t\"label\": \"G\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 14,\r\n\t\t\t\"label\": \"G#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 15,\r\n\t\t\t\"label\": \"Ab\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 16,\r\n\t\t\t\"label\": \"A\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 17,\r\n\t\t\t\"label\": \"A#\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 18,\r\n\t\t\t\"label\": \"Bb\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 19,\r\n\t\t\t\"label\": \"B\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 20,\r\n\t\t\t\"label\": \"B#\"\r\n\t\t}]\r\n\t};\r\n\r\n}","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the NotesPicker widget\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.NotesPicker = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tDOM: {\r\n\t\t\t\tINPUT_TYPE: 'checkbox',\r\n\t\t\t\tINPUT_NAME: 'note'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\t\t\tdataSource: chordsWiki.chordsData\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar notesList = null;\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\tvar init = function() {\r\n\t\t\tnotesList = initializeNotesCheckboxList(notesList);\r\n\t\t\trender();\r\n\t\t\tpopulateNotesCheckboxList(config.dataSource.notes, notesList);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI\r\n\t\t */\r\n\t\tvar render = function() {\r\n\t\t\tself.container.append(notesList);\r\n\t\t};\r\n\r\n\t\tvar initializeNotesCheckboxList = function(notesList) {\r\n\t\t\tnotesList = $('<ul>');\r\n\t\t\treturn notesList;\r\n\t\t};\r\n\r\n\t\tvar populateNotesCheckboxList = function(dataArray, list) {\r\n\t\t\tfor (var i = 0; i < dataArray.length; i++) {\r\n\t\t\t\tvar record = dataArray[i];\r\n\t\t\t\tvar listEntry = $('<li>');\r\n\t\t\t\tvar checkboxElement = $('<input />', { type: CONST.DOM.INPUT_TYPE, name: CONST.DOM.INPUT_NAME, value: record.id });\r\n\t\t\t\tlistEntry.append(checkboxElement);\r\n\t\t\t\tlistEntry.append(record.label);\r\n\t\t\t\tlist.append(listEntry);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());\r\n","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the Instrument object\r\n\t * @constructor\r\n\t */\r\n\tchordsWiki.Instrument = function(params) {\r\n\r\n\t\tvar CONST = {\r\n\t\t\tLABEL: {\r\n\t\t\t\tNOTES: 'Notes',\r\n\t\t\t},\r\n\t\t\tERROR: {\r\n\t\t\t\tCHORD_NOT_FOUND: 'Chord not found'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\t/* jshint ignore:start */\r\n\t\tvar instrumentChordsData = {\r\n\t\t\t\"chord_instances\": [{\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [1, 7, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [1, 6, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [4, 11, 16]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [4, 10, 16]\r\n\t\t\t}\r\n\r\n\t\t\t],\r\n\t\t\t\"notes\": [{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"Cb\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"C\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"label\": \"C#\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"label\": \"Db\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 4,\r\n\t\t\t\t\"label\": \"D\",\r\n\t\t\t\t\"key\": 2\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 5,\r\n\t\t\t\t\"label\": \"D#\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 6,\r\n\t\t\t\t\"label\": \"Eb\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 7,\r\n\t\t\t\t\"label\": \"E\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 8,\r\n\t\t\t\t\"label\": \"E#\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"label\": \"Fb\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 10,\r\n\t\t\t\t\"label\": \"F\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 11,\r\n\t\t\t\t\"label\": \"F#\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 12,\r\n\t\t\t\t\"label\": \"Gb\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 13,\r\n\t\t\t\t\"label\": \"G\",\r\n\t\t\t\t\"key\": 7\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 14,\r\n\t\t\t\t\"label\": \"G#\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 15,\r\n\t\t\t\t\"label\": \"Ab\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 16,\r\n\t\t\t\t\"label\": \"A\",\r\n\t\t\t\t\"key\": 9\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 17,\r\n\t\t\t\t\"label\": \"A#\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 18,\r\n\t\t\t\t\"label\": \"Bb\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 19,\r\n\t\t\t\t\"label\": \"B\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 20,\r\n\t\t\t\t\"label\": \"B#\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}]\r\n\t\t};\r\n\t\t/* jshint ignore:end */\r\n\r\n\t\tvar notesTextRow = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tself.container.append(render());\r\n\t\t};\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * Render the UI of the instrument\r\n\t\t */\r\n\t\tvar render = function() {\r\n\t\t\tvar instrumentContainer = $('<div>');\r\n\t\t\treturn instrumentContainer;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Retrieve the set of notes given the chord and the category\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar notesLookup = function(chord, category) {\r\n\t\t\tvar chordInstances = instrumentChordsData.chord_instances;\r\n\t\t\tfor (var i = 0; i < chordInstances.length; i++) {\r\n\t\t\t\tif (chordInstances[i].chord_id === parseInt(chord) && chordInstances[i].type_id === parseInt(category)) {\r\n\t\t\t\t\treturn chordInstances[i].notes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get notes property given the array of notes ids and the name of the property\r\n\t\t * @param {string[]} noteIds - The array containing the list of notes ids\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar getNotesProperty = function(noteIds, prop) {\r\n\t\t\tvar notes = instrumentChordsData.notes;\r\n\t\t\tvar properties = [];\r\n\t\t\tfor (var n in notes) {\r\n\t\t\t\tif (noteIds.indexOf(notes[n].id) > -1) {\r\n\t\t\t\t\tproperties.push(notes[n][prop]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn properties;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display textual details about the selected chord\r\n\t\t * @param {string[]} notes - The array containing the list of notes ids\r\n\t\t */\r\n\t\tvar displayTextualDetails = function(notes){\r\n\t\t\tvar notesLabels = getNotesProperty(notes, 'label');\r\n\t\t\tif (notesTextRow === null) {\r\n\t\t\t\tnotesTextRow = $('<span>');\r\n\t\t\t\tself.container.append(notesTextRow);\r\n\t\t\t}\r\n\t\t\tnotesTextRow.text(CONST.LABEL.NOTES + ' ' + notesLabels.join());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord textual details\r\n\t\t */\r\n\t\tvar cleanTextualDetails = function(){\r\n\t\t\tif (notesTextRow !== null) {\r\n\t\t\t\tnotesTextRow.empty();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display chord details\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t */\r\n\t\tthis.displayChordDetails = function(chord, category) {\r\n\r\n\t\t\t//retrieve chord details\r\n\t\t\tvar notes = notesLookup(chord, category);\r\n\t\t\tif(notes.length===0){\r\n\t\t\t\tthrow CONST.ERROR.CHORD_NOT_FOUND;\r\n\t\t\t}\r\n\r\n\t\t\t//display chord textual details\r\n\t\t\tdisplayTextualDetails(notes);\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord details\r\n\t\t */\r\n\t\tthis.cleanChordDetails = function() {\r\n\t\t\tcleanTextualDetails();\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());\r\n","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Constructor of the Keyboard instrument\r\n\t * @constructor\r\n\t * @extend chordsWiki.Instrument\r\n\t */\r\n\tchordsWiki.Keyboard = function(params) {\r\n\r\n\t\tchordsWiki.superClass(this, chordsWiki.Instrument, arguments);\r\n\r\n\t\tvar CONST = {\r\n\t\t\tCSS: {\r\n\t\t\t\tKEYBOARD: 'chordsWiki_keyboard',\r\n\t\t\t\tWHITE_KEY: 'chordsWiki_white_key',\r\n\t\t\t\tBLACK_KEY: 'chordsWiki_black_key',\r\n\t\t\t\tPRESSED_KEY: 'chordsWiki_pressed_key',\r\n\t\t\t\tKEYBOARD_CONTAINER: 'chordsWiki_keyboard_container'\r\n\t\t\t},\r\n\t\t\tLABEL: {\r\n\t\t\t\tNOTES: 'Notes',\r\n\t\t\t\tKEYS: 'Keys'\r\n\t\t\t},\r\n\t\t\tSELECTOR: {\r\n\t\t\t\tWHITE_KEY: '.chordsWiki_white_key',\r\n\t\t\t\tBLACK_KEY: '.chordsWiki_black_key'\r\n\t\t\t},\r\n\t\t\tATTRIBUTE: {\r\n\t\t\t\tKEY: 'data-key'\r\n\t\t\t},\r\n\t\t\tERROR: {\r\n\t\t\t\tCHORD_NOT_FOUND: 'Chord not found'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar config = {\r\n\r\n\t\t};\r\n\r\n\t\t$.extend(config, params);\r\n\r\n\t\tthis.container = $('<div>');\r\n\r\n\t\t/* jshint ignore:start */\r\n\t\tvar instrumentChordsData = {\r\n\t\t\t\"chord_instances\": [{\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [1, 7, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 0,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [1, 6, 13]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 0,\r\n\t\t\t\t\"notes\": [4, 11, 16]\r\n\t\t\t}, {\r\n\t\t\t\t\"chord_id\": 1,\r\n\t\t\t\t\"type_id\": 1,\r\n\t\t\t\t\"notes\": [4, 10, 16]\r\n\t\t\t}\r\n\r\n\t\t\t],\r\n\t\t\t\"notes\": [{\r\n\t\t\t\t\"id\": 0,\r\n\t\t\t\t\"label\": \"Cb\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 1,\r\n\t\t\t\t\"label\": \"C\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 2,\r\n\t\t\t\t\"label\": \"C#\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 3,\r\n\t\t\t\t\"label\": \"Db\",\r\n\t\t\t\t\"key\": 1\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 4,\r\n\t\t\t\t\"label\": \"D\",\r\n\t\t\t\t\"key\": 2\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 5,\r\n\t\t\t\t\"label\": \"D#\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 6,\r\n\t\t\t\t\"label\": \"Eb\",\r\n\t\t\t\t\"key\": 3\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 7,\r\n\t\t\t\t\"label\": \"E\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 8,\r\n\t\t\t\t\"label\": \"E#\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 9,\r\n\t\t\t\t\"label\": \"Fb\",\r\n\t\t\t\t\"key\": 4\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 10,\r\n\t\t\t\t\"label\": \"F\",\r\n\t\t\t\t\"key\": 5\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 11,\r\n\t\t\t\t\"label\": \"F#\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 12,\r\n\t\t\t\t\"label\": \"Gb\",\r\n\t\t\t\t\"key\": 6\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 13,\r\n\t\t\t\t\"label\": \"G\",\r\n\t\t\t\t\"key\": 7\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 14,\r\n\t\t\t\t\"label\": \"G#\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 15,\r\n\t\t\t\t\"label\": \"Ab\",\r\n\t\t\t\t\"key\": 8\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 16,\r\n\t\t\t\t\"label\": \"A\",\r\n\t\t\t\t\"key\": 9\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 17,\r\n\t\t\t\t\"label\": \"A#\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 18,\r\n\t\t\t\t\"label\": \"Bb\",\r\n\t\t\t\t\"key\": 10\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 19,\r\n\t\t\t\t\"label\": \"B\",\r\n\t\t\t\t\"key\": 11\r\n\t\t\t}, {\r\n\t\t\t\t\"id\": 20,\r\n\t\t\t\t\"label\": \"B#\",\r\n\t\t\t\t\"key\": 0\r\n\t\t\t}]\r\n\t\t};\r\n\t\t/* jshint ignore:end */\r\n\r\n\t\tvar notesTextRow = null;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tvar init = function() {\r\n\t\t\tself.container.append(render());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Create the key object\r\n\t\t * @param {boolean} addBlackKey - Flag to define the type of keyboard key (with black key following or not).\r\n\t\t * @param {string} whiteKeyId - The key attribute unequivocally identifying the white key\r\n\t\t * @param {string} blackKeyId - The key attribute unequivocally identifying the black key\r\n\t\t * @returns {jQuery} whiteKey - The keyboard key jQuery object generated\r\n\t\t */\r\n\t\tvar createWhiteKey = function(addBlackKey, whiteKeyId, blackKeyId) {\r\n\t\t\tvar whiteKey = $('<div>');\r\n\t\t\twhiteKey.addClass(CONST.CSS.WHITE_KEY);\r\n\t\t\twhiteKey.attr(CONST.ATTRIBUTE.KEY, whiteKeyId);\r\n\t\t\tif (addBlackKey === true) {\r\n\t\t\t\tvar blackKey = $('<div>');\r\n\t\t\t\tblackKey.addClass(CONST.CSS.BLACK_KEY);\r\n\t\t\t\tblackKey.attr(CONST.ATTRIBUTE.KEY, blackKeyId);\r\n\t\t\t\twhiteKey.append(blackKey);\r\n\t\t\t}\r\n\t\t\treturn whiteKey;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Render the UI of the keyboard\r\n\t\t */\r\n\t\tvar render = function() {\r\n\t\t\tvar keyboardContainer = $('<div>');\r\n\t\t\tkeyboardContainer.addClass(CONST.CSS.KEYBOARD_CONTAINER);\r\n\t\t\tvar keyboardInstrument = $('<div>');\r\n\t\t\tkeyboardInstrument.addClass(CONST.CSS.KEYBOARD);\r\n\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,0,1));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,2,3));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(false,4));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,5,6));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,7,8));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(true,9,10));\r\n\t\t\tkeyboardInstrument.append(createWhiteKey(false,11));\r\n\r\n\t\t\tkeyboardContainer.append(keyboardInstrument);\r\n\t\t\treturn keyboardContainer;\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Retrieve the set of notes given the chord and the category\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar notesLookup = function(chord, category) {\r\n\t\t\tvar chordInstances = instrumentChordsData.chord_instances;\r\n\t\t\tfor (var c in chordInstances) {\r\n\t\t\t\tif (chordInstances[c].chord_id === parseInt(chord) && chordInstances[c].type_id === parseInt(category)) {\r\n\t\t\t\t\treturn chordInstances[c].notes;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn [];\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Get notes property given the array of notes ids and the name of the property\r\n\t\t * @param {string[]} noteIds - The array containing the list of notes ids\r\n\t\t * @returns {string[]}\r\n\t\t */\r\n\t\tvar getNotesProperty = function(noteIds, prop) {\r\n\t\t\tvar notes = instrumentChordsData.notes;\r\n\t\t\tvar properties = [];\r\n\t\t\tfor (var n in notes) {\r\n\t\t\t\tif (noteIds.indexOf(notes[n].id) > -1) {\r\n\t\t\t\t\tproperties.push(notes[n][prop]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn properties;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display textual details about the selected chord\r\n\t\t * @param {string[]} notes - The array containing the list of notes ids\r\n\t\t */\r\n\t\tvar displayTextualDetails = function(notes){\r\n\t\t\tvar notesLabels = getNotesProperty(notes, 'label');\r\n\t\t\tif (notesTextRow === null) {\r\n\t\t\t\tnotesTextRow = $('<span>');\r\n\t\t\t\tself.container.append(notesTextRow);\r\n\t\t\t}\r\n\t\t\tnotesTextRow.text(CONST.LABEL.NOTES + ' ' + notesLabels.join() + ' ' + CONST.LABEL.KEYS + ' ' + notesLabels.join());\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord textual details\r\n\t\t */\r\n\t\tvar cleanTextualDetails = function(){\r\n\t\t\tif (notesTextRow !== null) {\r\n\t\t\t\tnotesTextRow.empty();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Display notes on keyboard\r\n\t\t * @param {string[]} notes - The array containing the list of notes ids\r\n\t\t */\r\n\t\tvar colorKeys = function(notes){\r\n\t\t\tvar keys = getNotesProperty(notes, 'key');\r\n\t\t\tfor(var k in keys){\r\n\t\t\t\tself.container.find( '['+CONST.ATTRIBUTE.KEY+'= \"'+keys[k]+'\"]').addClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean notes on keyboard\r\n\t\t */\r\n\t\tvar cleanKeys = function(){\r\n\t\t\tself.container.find(CONST.SELECTOR.BLACK_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t\tself.container.find(CONST.SELECTOR.WHITE_KEY).removeClass(CONST.CSS.PRESSED_KEY);\r\n\t\t};\r\n\r\n\r\n\t\t/**\r\n\t\t * Display chord details\r\n\t\t * @param {string} chord - The id of the chord selected\r\n\t\t * @param {string} category - The id of the chord category selected\r\n\t\t */\r\n\t\tthis.displayChordDetails = function(chord, category) {\r\n\t\t\t//clean notes details\r\n\t\t\tself.cleanChordDetails();\r\n\r\n\t\t\t//retrieve chord details\r\n\t\t\tvar notes = notesLookup(chord, category);\r\n\t\t\tif(notes.length===0){\r\n\t\t\t\tthrow CONST.ERROR.CHORD_NOT_FOUND;\r\n\t\t\t}\r\n\r\n\t\t\t//display chord textual details (notes, keys)\r\n\t\t\tdisplayTextualDetails(notes);\r\n\r\n\t\t\t//display notes on keyboard, coloring keys\r\n\t\t\tcolorKeys(notes);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Clean chord details\r\n\t\t */\r\n\t\tthis.cleanChordDetails = function() {\r\n\t\t\tcleanTextualDetails();\r\n\t\t\tcleanKeys();\r\n\t\t};\r\n\r\n\t\tinit();\r\n\r\n\t};\r\n\r\n}());"],"sourceRoot":"."}